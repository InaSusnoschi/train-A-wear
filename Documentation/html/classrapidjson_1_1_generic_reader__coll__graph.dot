digraph "rapidjson::GenericReader&lt; SourceEncoding, TargetEncoding, StackAllocator &gt;"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="rapidjson::GenericReader\l\< SourceEncoding, TargetEncoding,\l StackAllocator \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="SAX-style JSON parser. Use Reader for UTF8 encoding and default allocator."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" parseResult_" ,fontname="Helvetica"];
  Node2 [label="rapidjson::ParseResult",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structrapidjson_1_1_parse_result.html",tooltip="Result of parsing (wraps ParseErrorCode)"];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" code_" ,fontname="Helvetica"];
  Node3 [label="ParseErrorCode",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" offset_" ,fontname="Helvetica"];
  Node4 [label="size_t",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" state_" ,fontname="Helvetica"];
  Node5 [label="IterativeParsingState",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" stack_" ,fontname="Helvetica"];
  Node6 [label="rapidjson::internal\l::Stack\< StackAllocator \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classrapidjson_1_1internal_1_1_stack.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ownAllocator_\nallocator_" ,fontname="Helvetica"];
  Node7 [label="StackAllocator *",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" initialCapacity_" ,fontname="Helvetica"];
  Node8 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" stack_\nstackEnd_\nstackTop_" ,fontname="Helvetica"];
  Node8 [label="char *",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" kDefaultStackCapacity" ,fontname="Helvetica"];
}
